@model TaskTracker.Models.Task

@{
    ViewBag.Title = "EditTask";
}

<h2>Update Task</h2>


@using (Html.BeginForm("EditTask", "Home", FormMethod.Post, new { enctype = "multipart/form-data", optional = "optional" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Title, 0, 0, new { @class = "form-control", style = "width:100%;" })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, 20, 0, new { @class = "form-control", style = "width:100%;" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        @if (ViewBag.attachementList.Count > 0)
        {
            <h2>Check to Remove Attacments</h2>
            foreach (var item in ViewBag.attachementList)
            {

                <input type="checkbox" name="attchements" value="@item.Id">
                <a id="reAtt" href="~/UploadedFile/@item.FileName" download OnClick="removeAttchement_Click()">@item.FileName</a>
                <br />
            }
        }


    </div>

    <h2>Add New Attacments</h2>
    <p>Select one or multiple files</p>

    <input type="file" name="files" multiple />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "EmployeeTask")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
